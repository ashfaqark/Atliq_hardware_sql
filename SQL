**********STORED PROCEDURE TO GET MONTHLY GROSS SALES FOR CUSTOMER USING CUSTOMER CODE**********************

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_monthly_gross_total_customer`(
	in_customer_codes TEXT
)
BEGIN
SELECT 
	s.date, 
	sum(ROUND(g.gross_price*s.sold_quantity, 2)) as gross_total_price, Max(c.customer) as Customer
FROM fact_sales_monthly s
join fact_gross_price g on 
g.product_code = s.product_code and
g.fiscal_year = get_fiscal_year(s.date)
join dim_customer c on
c.customer_code = s.customer_code
WHERE 
	find_in_set(s.customer_code, in_customer_codes) >0
group by s.date
order by s.date asc;
END

-----------------------------------------------------------

**********FUNCTION TO GET FISCAL YEAR**********
CREATE DEFINER=`root`@`localhost` FUNCTION `get_fiscal_year`(
	calender_date date
) RETURNS int
    DETERMINISTIC
BEGIN
	declare fiscal_year INT;
    set fiscal_year = YEAR(date_add(calender_date, INTERVAL 4 month));
	RETURN fiscal_year;
END

----------------------------------------------------------

**********FUNCTION TO GET FISCAL YEAR QUARTER**********

CREATE DEFINER=`root`@`localhost` FUNCTION `get_fiscal_quarter`(
	calender_date date
) RETURNS char(2) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
		declare m TINYINT;
        declare qtr char(2);
        set m = month(calender_date);
	case
        WHEN m IN (9,10,11) THEN 
			set qtr = "Q!";
		WHEN m IN (12,1,2) THEN 
			set qtr = "Q2";
		WHEN m IN (3,4,5) THEN 
			set qtr = "Q3";
        ELSE 
			set qtr = "Q4";
    END CASE;
RETURN qtr;
END

***********************************************************
------------------------------------------------------------

Q. generate a report of individual product sales (aggregated on a monthly basis at the product code level) for Croma India customer for FY-2021 so that I can track individual product sales and run further product analytics on it in excel.
The report should have the following fields,
1. Month
2. Product Name
3. Variant
4. Sold Quantity
5. Gross Price Per Item
6. Gross Price Total

*************************************************************

SELECT s.date, g.fiscal_year,
      s.product_code,
      p.product, p.variant,s.sold_quantity, 
      g.gross_price, 
      ROUND(g.gross_price*s.sold_quantity, 2) as gross_total_price
FROM fact_sales_monthly s
join dim_product p on 
      s.product_code = p.product_code
join fact_gross_price g on 
      g.product_code = s.product_code and
      g.fiscal_year = get_fiscal_year(s.date)
WHERE
	    customer_code = 90002002 and 
      get_fiscal_year(date) = 2021 
   -- and get_fiscal_quarter(date) = "Q4"
order by date asc;


***********************************************************************
-----------------------------------------------------------------------
***********************************************************************
-- Generate an aggregate monthly gross sales report for Croma India customer so that I can track 
-- how much sales this particular customer is generating for AtliQ and manage our relationships accordingly.
-- The report should have the following fields,
-- 1. Month
-- 2. Total gross sales amount to Croma India in this month

***********************************************************************
SELECT 
	s.date, 
	sum(ROUND(g.gross_price*s.sold_quantity, 2)) as gross_total_price
FROM fact_sales_monthly s
join fact_gross_price g on 
g.product_code = s.product_code and
g.fiscal_year = get_fiscal_year(s.date)
WHERE customer_code = 90002002
group by s.date
order by s.date asc;


***************************************************************************
---------------------------------------------------------------------------
***************************************************************************

-- Generate a yearly report for Croma India where there are two columns
-- 1. Fiscal Year
-- 2. Total Gross Sales amount In that year from Croma

**************************************************************************

USING DIRECT FISCAL YEAR FROM GROSS PRICE TABLE

	SELECT 
		 g.fiscal_year,
		SUM(ROUND(g.gross_price*s.sold_quantity, 2)) as gross_total_price
	FROM fact_sales_monthly s
	join fact_gross_price g on 
	g.product_code = s.product_code and
	g.fiscal_year = get_fiscal_year(s.date)
	WHERE customer_code = 90002002
	-- group by g.fiscal_year
	group by g.fiscal_year;

***************************************************************************

USING FUNCTION TO EXTRACT FISCAL YEAR 

   select
            get_fiscal_year(date) as fiscal_year,
            sum(round(sold_quantity*g.gross_price,2)) as yearly_sales
	from fact_sales_monthly s
	join fact_gross_price g
	on 
	    g.fiscal_year=get_fiscal_year(s.date) and
	    g.product_code=s.product_code
	where
	    customer_code=90002002
	group by get_fiscal_year(date)
	order by fiscal_year;
